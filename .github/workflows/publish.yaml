# Run locally with act:
#
# act workflow_dispatch \
#  --input version=<version> \
#  --workflows ./.github/workflows/release.yaml \
#  --platform fusionauth-standard=[ecr-repo-name]/gha-runner-fusionauth-standard:latest \
#  --env-file <(aws configure export-credentials --profile [aws-profile] --format env)

name: Publish

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'
  workflow_dispatch:
    inputs:
      version:
        type: string
        required: true

permissions:
  contents: read

jobs:
  publish:
    runs-on: fusionauth-standard
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: configure git
        shell: bash
        run: |
          git config --global user.name "FusionAuth Automation"
          git config --global user.email "donotreply@fusionauth.io"

      - name: set aws credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::752443094709:role/github-actions
          role-session-name: aws-auth-action
          aws-region: us-west-2

      - name: get secret
        run: |
          while IFS=$'\t' read -r key value; do
            echo "::add-mask::${value}"
            echo "${key}=${value}" >> $GITHUB_ENV
          done < <(aws secretsmanager get-secret-value \
            --region us-west-2 \
            --secret-id platform/npmjs \
            --query SecretString \
            --output text | \
            jq -r 'to_entries[] | [.key, .value] | @tsv')

      - name: create npmrc
        run: |
          echo "color=false" > ~/.npmrc
          echo "//registry.npmjs.org/:_authToken=${{ env.API_KEY }}" >> ~/.npmrc
          chmod 600 ~/.npmrc

      - name: set version
        run: |
          npm version ${{ inputs.version }}

      # - name: publish to npmjs
      #   if: inputs.command == 'publish'
      #   shell: bash -l {0}
      #   run: |
      #     npm publish
